// SPDX-FileCopyrightText: 2023 Friedrich-Alexander-Universitat Erlangen-Nurnberg
//
// SPDX-License-Identifier: AGPL-3.0-only

pipeline TreeDataPipeline {

  // Define the structure of the pipeline.
  SourceRetriever
    -> TextInterpretationBlock
    -> CSVParsingBlock
    -> DataFilteringBlock
    -> CoordinateSplittingBlock
    -> TableMappingBlock
    -> DatabaseInsertionBlock;

  // Retrieve the CSV file from the given URL.
  block SourceRetriever oftype HttpExtractor {
    url: "https://opendata.rhein-kreis-neuss.de/api/v2/catalog/datasets/stadt-neuss-herbstpflanzung-2023/exports/csv";
  }

  // Interpret the fetched file as a text file.
  block TextInterpretationBlock oftype TextFileInterpreter { }

  // Parse the CSV file.
  block CSVParsingBlock oftype CSVInterpreter {
    delimiter: ",";
  }

  // Filter rows based on the 'stadtteil' column, keeping only those starting with "Vogelsang".
  block DataFilteringBlock oftype RowFilter {
    condition: "stadtteil LIKE 'Vogelsang%'";
  }

  // Split the "id" column into "geopoint_latitude" and "geopoint_longitude".
  block CoordinateSplittingBlock oftype ColumnSplitter {
    source_column: "id";
    target_columns: ["geopoint_latitude", "geopoint_longitude"];
    delimiter: ",";
    trim: true;
  }

  // Map the columns to appropriate SQLite data types.
  block TableMappingBlock oftype TableInterpreter {
    header: true;
    columns: [
      "baum_id" oftype integer,
      "stadtteil" oftype text,
      "geopoint_latitude" oftype decimal,
      "geopoint_longitude" oftype decimal,
      "pflanzjahr" oftype integer,
      "baumart_latein" oftype text
    ];
  }

  // Load the processed data into a SQLite database.
  block DatabaseInsertionBlock oftype SQLiteLoader {
    table: "trees";
    file: "./trees.sqlite";
  }

}
