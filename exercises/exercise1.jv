// SPDX-License-Identifier: AGPL-3.0-only

// Pipeline Model: Processing Airport Data
// This pipeline retrieves airport data from a CSV file hosted online and stores it in a SQLite database.

pipeline AirportDataPipeline {

  // Define the components and the order of operations in the pipeline.

  SourceRetriever
    -> TextInterpretationBlock
    -> CSVParsingBlock
    -> TableMappingBlock 
    -> DatabaseInsertionBlock;

  // Each component processes the output from the previous block.

  // The CSV file is downloaded from the specified URL.
  block SourceRetriever oftype HttpExtractor {
    url: "https://opendata.rhein-kreis-neuss.de/api/explore/v2.1/catalog/datasets/rhein-kreis-neuss-flughafen-weltweit/exports/csv?lang=en&timezone=Europe%2FBerlin&use_labels=true&delimiter=%3B";
  }

  // Converts the fetched file into a readable text format for further processing.
  block TextInterpretationBlock oftype TextFileInterpreter {}

  // Parses the text data as CSV, specifying the appropriate delimiter.
  block CSVParsingBlock oftype CSVInterpreter {
    delimiter: ";"; // The delimiter used in the CSV file.
  }

  // Maps the selected columns from the CSV to the appropriate data types for the database.
  block TableMappingBlock oftype TableInterpreter {
    header: true; // Indicates that the first row contains header information.
    columns: [
      "Lfd. Nummer" oftype integer,
      "Name des Flughafens" oftype text, // Corrected spelling for clarity
      "Ort" oftype text,
      "Land" oftype text,
      "IATA" oftype text,
      "ICAO" oftype text,
      "Latitude" oftype decimal,
      "Longitude" oftype decimal,
      "Altitude" oftype integer,
    ];
  }

  // This block handles the insertion of data into the SQLite database.
  block DatabaseInsertionBlock oftype SQLiteLoader {
    table: "airports"; // Destination table for the data
    file: "./airports.sqlite"; // Path to the SQLite database file
  }
}
